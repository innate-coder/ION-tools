heat_template_version: 2016-10-14

description:
  Isolates MG as a complete resource together with associated ports

parameters:
  cbam:
    type: json
  resources:
    type: json
  prefix:
    type: string
    description: String to make the name of all created resources unique
  mgManagementNet:
    type: string
    description: Management network for MG
  mgControlFabricNet:
    type: string
    description: Control Switch Fabric network for MG VM
  mgType:
    type: string
    description: mgType either it is mgWorking or mgProtect
  mgAntiAffinityGroup:
    type: string
    description: antiAffinityGroup for MG group
  cpCores:
    type: string
    description: cpCores for MG
  cfpValue:
    type: string
    description: compact fast path vaue for MG
    constraints:
     - allowed_values: [ 0, 1 ]
  groupIndex:
    type: string
    description: MG Scaling Group Index
  mtuSize:
    type: string
    description: MTU Size for Switch Fabric
  oamACsfIp:
    type: string
    description: OAM A Control Switch Fabric IP address
  oamBCsfIp:
    type: string
    description: OAM B Control Switch Fabric IP address

conditions:
  l3Connectivity: { equals : [ { get_param: [ cbam, extensions, l3Connectivity ] }, "1"] }

resources:

 mgManagementPort:
    type: OS::Neutron::Port
    properties:
      name: { list_join: [ "-", [ { get_param: prefix }, mgMgmtPort, { get_param: [ resources, slot] } ] ] }
      network: { get_param: mgManagementNet }
      security_groups: [ { get_param: [ cbam, extensions, securityGroup ] } ]
      replacement_policy: AUTO

 mgControlSwitchFabricPort:
    type: OS::Neutron::Port
    properties:
      name: { list_join: [ "-", [ { get_param: prefix }, mgCSFPort, { get_param: [ resources, slot ] } ] ]  }
      network: { get_param: mgControlFabricNet }
      security_groups: [ { get_param: [ cbam, extensions, securityGroup ] } ]
      replacement_policy: AUTO
      value_specs:
        # extra_dhcp_opts names are vendor specific. For Nuage opt_name=”mtu” should be used instead of “interface-mtu”
        extra_dhcp_opts:
        - {opt_name: mtu, opt_value: { get_param: mtuSize }}

 mgDataSwitchFabric1Port:
    type: OS::Neutron::Port
    properties:
      name: { list_join: [ "-", [ { get_param: prefix }, mgDataSFPort, { get_param: [  resources, slot  ] } ] ] }
      network: { get_param: [ cbam, virtualLinks, dataSwitchFabric1VL, networkId ] }
      security_groups: [ { get_param: [ cbam, extensions, securityGroup ] } ]
      binding:vnic_type: "direct"
      replacement_policy: AUTO
      #value_specs:
        # extra_dhcp_opts names are vendor specific. For Nuage opt_name=”mtu” should be used instead of “interface-mtu”
        #extra_dhcp_opts:
        #- {opt_name: mtu, opt_value: { get_param: mtuSize }}
      fixed_ips:
        - subnet_id: { get_param: [ cbam, extensions, dataSwitchFabric1SubnetId ] }

 mgDataSwitchFabric2Port:
    type: OS::Neutron::Port
    properties:
      name: { list_join: [ "-", [ { get_param: prefix }, mgDataSF2Port, { get_param: [  resources, slot  ] } ] ] }
      network: { get_param: [ cbam, virtualLinks, dataSwitchFabric2VL, networkId ] }
      security_groups: [ { get_param: [ cbam, extensions, securityGroup ] } ]
      binding:vnic_type: "direct"
      replacement_policy: AUTO
      #value_specs:
        # extra_dhcp_opts names are vendor specific. For Nuage opt_name=”mtu” should be used instead of “interface-mtu”
        #extra_dhcp_opts:
        #- {opt_name: mtu, opt_value: { get_param: mtuSize }}
      fixed_ips:
        - subnet_id: { get_param: [ cbam, extensions, dataSwitchFabric2SubnetId ] }

 mgServerInstance:
    type: OS::Nova::Server
    depends_on: [ mgManagementPort, mgControlSwitchFabricPort, mgDataSwitchFabric1Port, mgDataSwitchFabric2Port ]
    metadata: { "nokia_vnf_slotId": { get_param: [ resources, slot ] }, "nokia_vnf_cardType":"MG", "nokia_vnf_cpCores" : { get_param: cpCores }, "nokia_vnf_cfp" : { get_param: cfpValue }, "nokia_vnf_groupIndex" : { get_param: groupIndex } }
    properties:
      image_update_policy: "REBUILD"
      name: { list_join: [ "-", [ { get_param: prefix }, { get_param: mgType }, { get_param: [ resources, slot ] } ] ] }
      image: { get_param: [ resources, imageId ] }
      flavor: { get_param: [ resources, flavorId ] }
      config_drive: "true"
      user_data:
        str_replace:
          template: "$mgSmbiosMain$l3ConnectivityData"
          params:
            $mgSmbiosMain: { get_param: [ resources, smbios, main] }
            $l3ConnectivityData: { if: ["l3Connectivity", { list_join: [ "", [ " l3fab/0=", { get_attr: [mgControlSwitchFabricPort, fixed_ips, 0, ip_address] }, { get_param: [ resources, smbios, csf ] }, ";", { get_param: oamACsfIp }, ";", { get_param: oamBCsfIp }, " l3fab/1=", { get_attr: [mgDataSwitchFabric1Port, fixed_ips, 0, ip_address] }, { get_param: [ resources, smbios, dsf1 ] }, { get_attr: [mgDataSwitchFabric2Port, fixed_ips, 0, ip_address] }, { get_param: [ resources, smbios, dsf2 ] } ] ] }, ""] }
      user_data_format: "RAW"
      networks:
        - port: { get_resource: mgManagementPort }
        - port: { get_resource: mgControlSwitchFabricPort }
        - port: { get_resource: mgDataSwitchFabric1Port }
        - port: { get_resource: mgDataSwitchFabric2Port }
      availability_zone: { get_param: [ resources, azId ] }
      scheduler_hints:
        group: { get_param: mgAntiAffinityGroup }
